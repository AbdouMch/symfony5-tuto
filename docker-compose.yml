version: '3.8'

services:
  database_symfony_5:
    image: mysql:5.6.51
    container_name: database_symfony_5
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ${DB_PATH}:/var/lib/mysql:cached
    ports:
      - ${MYSQL_PORT}:3306
    networks:
      - symfony_5

  www_symfony_5:
    build: docker/php
    container_name: symfony_5
    depends_on:
      - database_symfony_5
      - mercure_symfo_5
      - redis_symfo_5
      - elasticsearch_symfo_5
    links:
      - database_symfony_5
      - mercure_symfo_5
      - redis_symfo_5
      - elasticsearch_symfo_5
    ports:
      - ${HTTP_PORT}:80
      - ${HTTPS_PORT}:443
    volumes:
      - ./docker/php/conf.d/000-default.conf:/etc/apache2/sites-available/000-default.conf
      - ./docker/php/conf.d/default-ssl.conf:/etc/apache2/sites-available/default-ssl.conf
      - ./:/srv/app
      - ./docker/php/cert/mycert.crt:/etc/ssl/certs/mycert.crt
      - ./docker/php/cert/mycert.key:/etc/ssl/private/mycert.key
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - symfony_5

  ###> symfony/mailer ###
#  mailer:
#    image: schickling/mailcatcher
#    ports: [ "1025", "1080" ]
  ###< symfony/mailer ###

###> symfony/mercure-bundle ###
  mercure_symfo_5:
    image: dunglas/mercure
    container_name: mercure_symfo_5
    environment:
      MERCURE_PUBLISHER_JWT_KEY: ${MERCURE_JWT_SECRET}
      MERCURE_SUBSCRIBER_JWT_KEY: ${MERCURE_JWT_SECRET}
      # Set the URL of your Symfony project (without trailing slash!) as value of the cors_origins directive
      MERCURE_EXTRA_DIRECTIVES: |
        cors_origins https://127.0.0.1:443
      # Comment the following line to enable HTTPS
      SERVER_NAME: ':80'
    ports:
      - ${HTTP_MERCURE_PORT}:80
      - ${HTTPS_MERCURE_PORT}:443
    volumes:
      - mercure_data:/data
      - mercure_config:/config
    # Comment the following line to disable the development mode
    command: /usr/bin/caddy run -config /etc/caddy/Caddyfile.dev
    networks:
      - symfony_5
###< symfony/mercure-bundle ###

  redis_symfo_5:
    container_name: redis_symfo_5
    image: redis:7.0.11-alpine
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - ${REDIS_PATH}:/data:cached
    networks:
      - symfony_5

  elasticsearch_symfo_5:
    container_name: elasticsearch_symfo_5
    image: docker.elastic.co/elasticsearch/elasticsearch:${ES_VERSION}
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m" # 512mo HEAP
#      - node.name=elasticsearch_symfo_5
      - cluster.name=${ES_CLUSTER_NAME}
#      - cluster.initial_master_nodes=off
      - ELASTIC_PASSWORD=${ES_PASSWORD}
      - bootstrap.memory_lock=true
#      - xpack.security.enabled=true
#      - xpack.security.http.ssl.enabled=false
#      - xpack.license.self_generated.type=${ES_LICENSE}
#      - xpack.security.http.ssl.key=certs/elasticsearch_symfo_5/elasticsearch_symfo_5.key
#      - xpack.security.http.ssl.certificate=certs/elasticsearch_symfo_5/elasticsearch_symfo_5.crt
#      - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
#      - xpack.security.transport.ssl.enabled=true
#      - xpack.security.transport.ssl.key=certs/elasticsearch_symfo_5/elasticsearch_symfo_5.key
#      - xpack.security.transport.ssl.certificate=certs/elasticsearch_symfo_5/elasticsearch_symfo_5.crt
#      - xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
#      - xpack.security.transport.ssl.verification_mode=certificate
    ulimits:
      memlock:
        soft: -1
        hard: -1
#    healthcheck:
#      test:
#        [
#            "CMD-SHELL",
#            "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'",
#        ]
#      interval: 10s
#      timeout: 10s
#      retries: 120
#    mem_limit: ${MEM_LIMIT}
    volumes:
#      - certs:/usr/share/elasticsearch/config/certs
      - ${ES_PATH}:/usr/share/elasticsearch/data
    ports:
      - ${ES_PORT}:9200
    networks:
      - symfony_5

  kibana_symfo_5:
    container_name: kibana_symfo_5
    image: docker.elastic.co/kibana/kibana:${ES_VERSION}
    depends_on:
      - elasticsearch_symfo_5
    links:
      - elasticsearch_symfo_5
    volumes:
      - ${KIBANA_PATH}:/usr/share/kibana/data
    ports:
      - ${KIBANA_PORT}:5601
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=http://elasticsearch_symfo_5:9200
      - ELASTICSEARCH_USERNAME=${KIBANA_USER}
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
#      - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=config/certs/ca/ca.crt
    networks:
      - symfony_5

networks:
  symfony_5:

volumes:
###> symfony/mercure-bundle ###
  mercure_data:
  mercure_config:
###< symfony/mercure-bundle ###
